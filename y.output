State 22 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program stmt
    2        | %empty

    3 stmt: ID ASSIGN expr '\n'
    4     | TELLME '(' expr ')' '\n'
    5     | ID ASSIGN STRING '\n'
    6     | logiceq '\n' '\t' neststmt ELSE '\n' '\t' neststmt

    7 neststmt: ID ASSIGN expr '\n'
    8         | ID ASSIGN STRING '\n'
    9         | TELLME '(' expr ')' '\n'
   10         | logiceq '\n' '\t' neststmt '\t' ELSE '\n' '\t' neststmt

   11 logiceq: expr LOGIC expr

   12 expr: VALUE
   13     | ID
   14     | expr OP expr
   15     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'\t' (9) 6 10
'\n' (10) 3 4 5 6 7 8 9 10
'(' (40) 4 9 15
')' (41) 4 9 15
error (256)
ID (258) 3 5 7 8 13
VALUE (259) 12
OP (260) 14
ASSIGN (261) 3 5 7 8
LOGIC (262) 11
TELLME (263) 4 9
ELSE (264) 6 10
STRING (265) 5 8


Nonterminals, with rules where they appear

$accept (15)
    on left: 0
program (16)
    on left: 1 2, on right: 0 1
stmt (17)
    on left: 3 4 5 6, on right: 1
neststmt (18)
    on left: 7 8 9 10, on right: 6 10
logiceq (19)
    on left: 11, on right: 6 10
expr (20)
    on left: 12 13 14 15, on right: 3 4 7 9 11 14 15


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    1 program: program . stmt

    $end    shift, and go to state 2
    ID      shift, and go to state 3
    VALUE   shift, and go to state 4
    TELLME  shift, and go to state 5
    '('     shift, and go to state 6

    stmt     go to state 7
    logiceq  go to state 8
    expr     go to state 9


State 2

    0 $accept: program $end .

    $default  accept


State 3

    3 stmt: ID . ASSIGN expr '\n'
    5     | ID . ASSIGN STRING '\n'
   13 expr: ID .

    ASSIGN  shift, and go to state 10

    $default  reduce using rule 13 (expr)


State 4

   12 expr: VALUE .

    $default  reduce using rule 12 (expr)


State 5

    4 stmt: TELLME . '(' expr ')' '\n'

    '('  shift, and go to state 11


State 6

   15 expr: '(' . expr ')'

    ID     shift, and go to state 12
    VALUE  shift, and go to state 4
    '('    shift, and go to state 6

    expr  go to state 13


State 7

    1 program: program stmt .

    $default  reduce using rule 1 (program)


State 8

    6 stmt: logiceq . '\n' '\t' neststmt ELSE '\n' '\t' neststmt

    '\n'  shift, and go to state 14


State 9

   11 logiceq: expr . LOGIC expr
   14 expr: expr . OP expr

    OP     shift, and go to state 15
    LOGIC  shift, and go to state 16


State 10

    3 stmt: ID ASSIGN . expr '\n'
    5     | ID ASSIGN . STRING '\n'

    ID      shift, and go to state 12
    VALUE   shift, and go to state 4
    STRING  shift, and go to state 17
    '('     shift, and go to state 6

    expr  go to state 18


State 11

    4 stmt: TELLME '(' . expr ')' '\n'

    ID     shift, and go to state 12
    VALUE  shift, and go to state 4
    '('    shift, and go to state 6

    expr  go to state 19


State 12

   13 expr: ID .

    $default  reduce using rule 13 (expr)


State 13

   14 expr: expr . OP expr
   15     | '(' expr . ')'

    OP   shift, and go to state 15
    ')'  shift, and go to state 20


State 14

    6 stmt: logiceq '\n' . '\t' neststmt ELSE '\n' '\t' neststmt

    '\t'  shift, and go to state 21


State 15

   14 expr: expr OP . expr

    ID     shift, and go to state 12
    VALUE  shift, and go to state 4
    '('    shift, and go to state 6

    expr  go to state 22


State 16

   11 logiceq: expr LOGIC . expr

    ID     shift, and go to state 12
    VALUE  shift, and go to state 4
    '('    shift, and go to state 6

    expr  go to state 23


State 17

    5 stmt: ID ASSIGN STRING . '\n'

    '\n'  shift, and go to state 24


State 18

    3 stmt: ID ASSIGN expr . '\n'
   14 expr: expr . OP expr

    OP    shift, and go to state 15
    '\n'  shift, and go to state 25


State 19

    4 stmt: TELLME '(' expr . ')' '\n'
   14 expr: expr . OP expr

    OP   shift, and go to state 15
    ')'  shift, and go to state 26


State 20

   15 expr: '(' expr ')' .

    $default  reduce using rule 15 (expr)


State 21

    6 stmt: logiceq '\n' '\t' . neststmt ELSE '\n' '\t' neststmt

    ID      shift, and go to state 27
    VALUE   shift, and go to state 4
    TELLME  shift, and go to state 28
    '('     shift, and go to state 6

    neststmt  go to state 29
    logiceq   go to state 30
    expr      go to state 9


State 22

   14 expr: expr . OP expr
   14     | expr OP expr .

    OP  shift, and go to state 15

    OP        [reduce using rule 14 (expr)]
    $default  reduce using rule 14 (expr)


State 23

   11 logiceq: expr LOGIC expr .
   14 expr: expr . OP expr

    OP  shift, and go to state 15

    $default  reduce using rule 11 (logiceq)


State 24

    5 stmt: ID ASSIGN STRING '\n' .

    $default  reduce using rule 5 (stmt)


State 25

    3 stmt: ID ASSIGN expr '\n' .

    $default  reduce using rule 3 (stmt)


State 26

    4 stmt: TELLME '(' expr ')' . '\n'

    '\n'  shift, and go to state 31


State 27

    7 neststmt: ID . ASSIGN expr '\n'
    8         | ID . ASSIGN STRING '\n'
   13 expr: ID .

    ASSIGN  shift, and go to state 32

    $default  reduce using rule 13 (expr)


State 28

    9 neststmt: TELLME . '(' expr ')' '\n'

    '('  shift, and go to state 33


State 29

    6 stmt: logiceq '\n' '\t' neststmt . ELSE '\n' '\t' neststmt

    ELSE  shift, and go to state 34


State 30

   10 neststmt: logiceq . '\n' '\t' neststmt '\t' ELSE '\n' '\t' neststmt

    '\n'  shift, and go to state 35


State 31

    4 stmt: TELLME '(' expr ')' '\n' .

    $default  reduce using rule 4 (stmt)


State 32

    7 neststmt: ID ASSIGN . expr '\n'
    8         | ID ASSIGN . STRING '\n'

    ID      shift, and go to state 12
    VALUE   shift, and go to state 4
    STRING  shift, and go to state 36
    '('     shift, and go to state 6

    expr  go to state 37


State 33

    9 neststmt: TELLME '(' . expr ')' '\n'

    ID     shift, and go to state 12
    VALUE  shift, and go to state 4
    '('    shift, and go to state 6

    expr  go to state 38


State 34

    6 stmt: logiceq '\n' '\t' neststmt ELSE . '\n' '\t' neststmt

    '\n'  shift, and go to state 39


State 35

   10 neststmt: logiceq '\n' . '\t' neststmt '\t' ELSE '\n' '\t' neststmt

    '\t'  shift, and go to state 40


State 36

    8 neststmt: ID ASSIGN STRING . '\n'

    '\n'  shift, and go to state 41


State 37

    7 neststmt: ID ASSIGN expr . '\n'
   14 expr: expr . OP expr

    OP    shift, and go to state 15
    '\n'  shift, and go to state 42


State 38

    9 neststmt: TELLME '(' expr . ')' '\n'
   14 expr: expr . OP expr

    OP   shift, and go to state 15
    ')'  shift, and go to state 43


State 39

    6 stmt: logiceq '\n' '\t' neststmt ELSE '\n' . '\t' neststmt

    '\t'  shift, and go to state 44


State 40

   10 neststmt: logiceq '\n' '\t' . neststmt '\t' ELSE '\n' '\t' neststmt

    ID      shift, and go to state 27
    VALUE   shift, and go to state 4
    TELLME  shift, and go to state 28
    '('     shift, and go to state 6

    neststmt  go to state 45
    logiceq   go to state 30
    expr      go to state 9


State 41

    8 neststmt: ID ASSIGN STRING '\n' .

    $default  reduce using rule 8 (neststmt)


State 42

    7 neststmt: ID ASSIGN expr '\n' .

    $default  reduce using rule 7 (neststmt)


State 43

    9 neststmt: TELLME '(' expr ')' . '\n'

    '\n'  shift, and go to state 46


State 44

    6 stmt: logiceq '\n' '\t' neststmt ELSE '\n' '\t' . neststmt

    ID      shift, and go to state 27
    VALUE   shift, and go to state 4
    TELLME  shift, and go to state 28
    '('     shift, and go to state 6

    neststmt  go to state 47
    logiceq   go to state 30
    expr      go to state 9


State 45

   10 neststmt: logiceq '\n' '\t' neststmt . '\t' ELSE '\n' '\t' neststmt

    '\t'  shift, and go to state 48


State 46

    9 neststmt: TELLME '(' expr ')' '\n' .

    $default  reduce using rule 9 (neststmt)


State 47

    6 stmt: logiceq '\n' '\t' neststmt ELSE '\n' '\t' neststmt .

    $default  reduce using rule 6 (stmt)


State 48

   10 neststmt: logiceq '\n' '\t' neststmt '\t' . ELSE '\n' '\t' neststmt

    ELSE  shift, and go to state 49


State 49

   10 neststmt: logiceq '\n' '\t' neststmt '\t' ELSE . '\n' '\t' neststmt

    '\n'  shift, and go to state 50


State 50

   10 neststmt: logiceq '\n' '\t' neststmt '\t' ELSE '\n' . '\t' neststmt

    '\t'  shift, and go to state 51


State 51

   10 neststmt: logiceq '\n' '\t' neststmt '\t' ELSE '\n' '\t' . neststmt

    ID      shift, and go to state 27
    VALUE   shift, and go to state 4
    TELLME  shift, and go to state 28
    '('     shift, and go to state 6

    neststmt  go to state 52
    logiceq   go to state 30
    expr      go to state 9


State 52

   10 neststmt: logiceq '\n' '\t' neststmt '\t' ELSE '\n' '\t' neststmt .

    $default  reduce using rule 10 (neststmt)
