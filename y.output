Rules useless in parser due to conflicts

    8 expr: VAR '+' NUM


State 12 conflicts: 5 reduce/reduce


Grammar

    0 $accept: line $end

    1 line: expr '\n'

    2 expr: expr '+' expr
    3     | expr '-' expr
    4     | expr '*' expr
    5     | expr '/' expr
    6     | NUM
    7     | VAR '+' expr
    8     | VAR '+' NUM


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1
'*' (42) 4
'+' (43) 2 7 8
'-' (45) 3
'/' (47) 5
error (256)
NUM (258) 6 8
VAR (259) 7 8


Nonterminals, with rules where they appear

$accept (10)
    on left: 0
line (11)
    on left: 1, on right: 0
expr (12)
    on left: 2 3 4 5 6 7 8, on right: 1 2 3 4 5 7


State 0

    0 $accept: . line $end

    NUM  shift, and go to state 1
    VAR  shift, and go to state 2

    line  go to state 3
    expr  go to state 4


State 1

    6 expr: NUM .

    $default  reduce using rule 6 (expr)


State 2

    7 expr: VAR . '+' expr
    8     | VAR . '+' NUM

    '+'  shift, and go to state 5


State 3

    0 $accept: line . $end

    $end  shift, and go to state 6


State 4

    1 line: expr . '\n'
    2 expr: expr . '+' expr
    3     | expr . '-' expr
    4     | expr . '*' expr
    5     | expr . '/' expr

    '-'   shift, and go to state 7
    '+'   shift, and go to state 8
    '*'   shift, and go to state 9
    '/'   shift, and go to state 10
    '\n'  shift, and go to state 11


State 5

    7 expr: VAR '+' . expr
    8     | VAR '+' . NUM

    NUM  shift, and go to state 12
    VAR  shift, and go to state 2

    expr  go to state 13


State 6

    0 $accept: line $end .

    $default  accept


State 7

    3 expr: expr '-' . expr

    NUM  shift, and go to state 1
    VAR  shift, and go to state 2

    expr  go to state 14


State 8

    2 expr: expr '+' . expr

    NUM  shift, and go to state 1
    VAR  shift, and go to state 2

    expr  go to state 15


State 9

    4 expr: expr '*' . expr

    NUM  shift, and go to state 1
    VAR  shift, and go to state 2

    expr  go to state 16


State 10

    5 expr: expr '/' . expr

    NUM  shift, and go to state 1
    VAR  shift, and go to state 2

    expr  go to state 17


State 11

    1 line: expr '\n' .

    $default  reduce using rule 1 (line)


State 12

    6 expr: NUM .
    8     | VAR '+' NUM .

    '-'       reduce using rule 6 (expr)
    '-'       [reduce using rule 8 (expr)]
    '+'       reduce using rule 6 (expr)
    '+'       [reduce using rule 8 (expr)]
    '*'       reduce using rule 6 (expr)
    '*'       [reduce using rule 8 (expr)]
    '/'       reduce using rule 6 (expr)
    '/'       [reduce using rule 8 (expr)]
    '\n'      reduce using rule 6 (expr)
    '\n'      [reduce using rule 8 (expr)]
    $default  reduce using rule 6 (expr)


State 13

    2 expr: expr . '+' expr
    3     | expr . '-' expr
    4     | expr . '*' expr
    5     | expr . '/' expr
    7     | VAR '+' expr .

    '*'  shift, and go to state 9
    '/'  shift, and go to state 10

    $default  reduce using rule 7 (expr)


State 14

    2 expr: expr . '+' expr
    3     | expr . '-' expr
    3     | expr '-' expr .
    4     | expr . '*' expr
    5     | expr . '/' expr

    '*'  shift, and go to state 9
    '/'  shift, and go to state 10

    $default  reduce using rule 3 (expr)


State 15

    2 expr: expr . '+' expr
    2     | expr '+' expr .
    3     | expr . '-' expr
    4     | expr . '*' expr
    5     | expr . '/' expr

    '*'  shift, and go to state 9
    '/'  shift, and go to state 10

    $default  reduce using rule 2 (expr)


State 16

    2 expr: expr . '+' expr
    3     | expr . '-' expr
    4     | expr . '*' expr
    4     | expr '*' expr .
    5     | expr . '/' expr

    $default  reduce using rule 4 (expr)


State 17

    2 expr: expr . '+' expr
    3     | expr . '-' expr
    4     | expr . '*' expr
    5     | expr . '/' expr
    5     | expr '/' expr .

    $default  reduce using rule 5 (expr)
